# -*- coding: utf-8 -*-
"""LR.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1z2hcpsbu-hE1y5BECpm9nnZD3PFgtNzv
"""

import pandas as pd 
from sklearn import datasets
from sklearn.model_selection import train_test_split
from sklearn import linear_model
from sklearn.metrics import mean_squared_error, r2_score
import seaborn as sns

bostosH = datasets.load_boston()

df = pd.DataFrame(bostosH.data, columns=bostosH.feature_names)
df.head()

df['medv'] = bostosH.target
df.head()

print(bostosH.DESCR)

X = df.drop(['medv'], axis=1)
y = bostosH.target

x_train, x_test, y_train, y_test = train_test_split(X, y, test_size=0.20)

L_model = linear_model.LinearRegression()

L_model.fit(x_train, y_train)

y_pred = L_model.predict(x_test)

print('Intercept: ', L_model.intercept_)
print('Coefficients: ', L_model.coef_)
print('Mean Squared error(MSE): %.2f' % mean_squared_error(y_test, y_pred))
print('Coefficient of determination (R^2): %.2f' % r2_score(y_test, y_pred))

#formula de regresion lineal
# y  = b0 + b1*x + e
#b0 = intercepcion
#b1 = coeficientes
#e = error

df_coef = pd.DataFrame(L_model.coef_.reshape(-1,13), columns=bostosH.feature_names)
df_coef

sns.scatterplot(y_test, y_pred)

